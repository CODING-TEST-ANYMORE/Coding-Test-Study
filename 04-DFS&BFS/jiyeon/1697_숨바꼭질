
#  1697 숨바꼭질



###  포인트 설명
                         5
              4          6         10
          (3  5  8)  (5  7  12)  (9  11  20)
                         :



  - 수빈이가 처음에 5의 위치에 있다면 위 그림처럼 5-1, 5+1, 5*2 이렇게 **3개의 좌표**로 이동할 수 있다. 또 **3개의 좌표는**  또 각각 -1, +1, *2 로 이동할 수 있고 이때, 동생과 위치가 같아지는 순간을 찾으면 된다.
  - 좌표를 이동 시키는 부분에서 코드가 중복되는 거 같아 move배열에 각 연산을 람다함수로 담아서 구현해주었다.

<br>

```python
import sys
input = sys.stdin.readline
from collections import deque

#수빈이는 -1, +1, *2 이렇게 이동할 수 있음
move = [lambda x : x-1, lambda x : x+1, lambda x : x*2]

n, k = map(int, input().split())

dq = deque()
dq.append((n, 0))
visit = [False] * 100001
min_second = 100000

while(dq):
  l, depth = dq.popleft()
  if(l == k): #동생 찾음 -> 최소 시간 갱신
    min_second = min(min_second, depth)
  else:
    for i in range(3):
      next_l = move[i](l)
      if(0 <= next_l <= 100000 and not visit[next_l]):
        dq.append((next_l, depth+1))
        visit[next_l] = True

print(min_second)
```
