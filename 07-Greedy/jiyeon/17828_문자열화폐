
#  17828 문자열 화폐

###  포인트 설명
- 첨에 생각 없이 dfs로 풀다가 시간초과, 메모리 초과 등 돼도 않는 오류들을 맞고 생각을 고쳐먹고 풀었다💦
- 일단 모든 문자가 A=1인데도 x 보다 작거나 모든 문자가 Z=26인데도 x보다 크면 문자열이 존재할 수 없다!! ➡️ ! 출력하도록 처리
- 위의 경우가 아니라면 일단 1로 셋팅한 상태로 시작한다. ex) [1, 1, 1, 1, 1, 1]
- 뒤부터 거꾸로 보면서 해당 자리를 어떤 수로 할지 정해주는 것이다.
	- 만약 해당 자리를 26으로 설정하더라도 목표 가치보다 작다면 26으로 설정해주고 넘어가고
	- 아니라면 [1-26]사이 값으로 설정했을 때 목표 가치에 맞는 문자열을 찾은 것 이므로 답을 출력해준다.
```python
import sys
input = sys.stdin.readline

n, x = map(int, input().split()) #문자열 길이, 문자열 가치

def printString(arr):
  for i in arr:
    print(chr(i+64), end = "")

if(x < n or x > n*26): #그런 문자열 존재할 수 X
  print("!")
else:
  arr = [1 for _ in range(n)]
  for i in range(n-1, -1, -1):
    total = 1*i + 26*(n-i-1) #i번째를 제외한 합
    if(total + 26 < x): #i번째 값이 26이어도 목표 가치보다 작으면 arr[i] = 26하고 다음으로 ㄱㄱ
      arr[i] = 26
    else: #i를 1-26사이로 설정하면 목표 가치도달할 수 있음!!
      arr[i] = x - total
      printString(arr)
      break
```
