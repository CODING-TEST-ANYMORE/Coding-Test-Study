
#  1463 1로 만들기

###  포인트 설명
- 각 연산들(//3, //2, -1)을 매 수 마다 진행해주는 bfs로 풀어주었다.
- 방문했는지 검사하고 dp에 담는 부분에서 매 연산마다 중복 로직이 생겨서 cals 배열에 람다로 각 연산을 담아서 중복을 최소화하였다.

```python
import sys
input = sys.stdin.readline
from collections import deque

n = int(input())

#3또는 2로 나누어 떨어지지 않으면 false 리턴, 즉 결과가 true면 연산가능이고 false면 나누어 떨어지지 않아 연산 불가능하다는 의미
cals = [lambda x : x//3 if x%3 ==0 else False,
        lambda x : x//2 if x%2 ==0 else False,
        lambda x : x-1]

def bfs(n):
  dq = deque()
  dq.append((n, 0))
  visit = [False] * (n+1)
  visit[n] = True
  while(dq):
    x, cnt = dq.popleft()
    if(x == 1): #1로 만들면 횟수 리턴
      return cnt
    for cal in cals:
      next_x = cal(x) #연산 진행
      if(next_x and not visit[next_x]): #연산 결과가 아직 방문 안 한 곳이면 dq에 넣기
        visit[next_x] = True
        dq.append((next_x, cnt+1))

print(bfs(n))
```
